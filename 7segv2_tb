library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity five_bit_to_seven_segment_multiplexed_tb is
end five_bit_to_seven_segment_multiplexed_tb;

architecture Behavioral of five_bit_to_seven_segment_multiplexed_tb is
    constant CLOCK_PERIOD : time := 10 ns; -- Clock period (100 MHz)
    
    signal clk_tb : std_logic := '0'; -- Testbench clock signal
    signal reset_tb : std_logic := '0'; -- Testbench reset signal
    signal input_number_tb : std_logic_vector(4 downto 0) := "00000"; -- Testbench input number
    signal display_segments_tb : std_logic_vector(6 downto 0); -- Testbench display segments
    signal display_enable_tb : std_logic_vector(3 downto 0); -- Testbench display enable signals

begin

    -- Instantiate the DUT (Design Under Test)
    DUT : entity work.five_bit_to_seven_segment_multiplexed
        port map (
            clk => clk_tb,
            reset => reset_tb,
            input_number => input_number_tb,
            display_segments => display_segments_tb,
            display_enable => display_enable_tb
        );

    -- Clock process
    clk_process : process
    begin
        while now < 1000 ns loop -- Run simulation for 1000 ns
            clk_tb <= not clk_tb;
            wait for CLOCK_PERIOD / 2; -- Half period for clock
        end loop;
        wait;
    end process;

    -- Reset process
    reset_process : process
    begin
        reset_tb <= '1'; -- Assert reset
        wait for 20 ns; -- Hold reset for 20 ns
        reset_tb <= '0'; -- De-assert reset
        wait;
    end process;

    -- Stimulus process
    stimulus_process : process
    begin
        wait for 50 ns; -- Wait for initial stabilization
        
        -- Test different input numbers
        input_number_tb <= "00001"; -- Display 1
        wait for 100 ns;

        input_number_tb <= "00010"; -- Display 2
        wait for 100 ns;

        input_number_tb <= "00011"; -- Display 3
        wait for 100 ns;

        input_number_tb <= "00100"; -- Display 4
        wait for 100 ns;

        -- Test invalid input number
        input_number_tb <= "11011"; -- Invalid input, should display all segments off
        wait for 100 ns;

        -- Finish simulation
        wait for 100 ns;
        assert false report "Simulation complete" severity note;
        wait;
    end process;

end Behavioral;
