-- Testbench automatically generated online
-- at https://vhdl.lapinoo.net
-- Generation date : 26.4.2024 08:46:04 UTC

library ieee;
use ieee.std_logic_1164.all;

entity tb_cezar is
end tb_cezar;

architecture tb of tb_cezar is

    component cezar
        port (clk        : in std_logic;
              input      : in std_logic_vector (4 downto 0);
              pos        : in std_logic_vector (4 downto 0);
              coded_txt  : in std_logic_vector (4 downto 0);
              SW         : in std_logic;
              code_out   : out std_logic_vector (4 downto 0);
              decode_out : out std_logic_vector (4 downto 0));
    end component;

    signal clk        : std_logic;
    signal input      : std_logic_vector (4 downto 0);
    signal pos        : std_logic_vector (4 downto 0);
    signal coded_txt  : std_logic_vector (4 downto 0);
    signal SW         : std_logic;
    signal code_out   : std_logic_vector (4 downto 0);
    signal decode_out : std_logic_vector (4 downto 0);

    constant TbPeriod : time := 50 ns; -- EDIT Put right period here
    signal TbClock : std_logic := '0';
    signal TbSimEnded : std_logic := '0';

begin

    dut : cezar
    port map (clk        => clk,
              input      => input,
              pos        => pos,
              coded_txt  => coded_txt,
              SW         => SW,
              code_out   => code_out,
              decode_out => decode_out);

    -- Clock generation
    TbClock <= not TbClock after TbPeriod/2 when TbSimEnded /= '1' else '0';

    -- EDIT: Check that clk is really your main clock signal
    clk <= TbClock;

    stimuli : process
    begin
        -- EDIT Adapt initialization as needed
        SW<= '0';
        pos <= "00101";
        wait for 50 ns;
        input <= "00000";
        wait for 50 ns;
        input <= "00001";
        wait for 50 ns;
        input <= "00010";
        wait for 50 ns;
        input <= "00011";
        wait for 50 ns;
        input <= "10110";
        wait for 50ns;
        

        SW<= '1';
        pos <= "11101";
        wait for 50 ns;
        coded_txt <= "00000";
        wait for 50 ns;
        coded_txt <= "00001";
        wait for 50 ns;
        coded_txt <= "00010";
        wait for 50 ns;
        coded_txt <= "00011";
        wait for 50 ns;
	
        -- EDIT Add stimuli here
        wait for 100 * TbPeriod;

        -- Stop the clock and hence terminate the simulation
        TbSimEnded <= '1';
        wait;
    end process;

end tb;

-- Configuration block below is required by some simulators. Usually no need to edit.

configuration cfg_tb_cezar of tb_cezar is
    for tb
    end for;
end cfg_tb_cezar;
